@model IHSDC.WebApp.Models.CarPcModel

@{
    ViewBag.Title = "ChangeStatus";
    Layout = "~/Views/Shared/_Layoutagi.cshtml";
}
<script>
    //function OnlyInputLetters(e, t) {
    //    try {
    //        if (window.event) {
    //            var charCode = window.event.keyCode;
    //        }
    //        else if (e) {
    //            var charCode = e.which;
    //        }
    //        else { return true; }
    //        if ((charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123))
    //            return true;
    //        else
    //            return false;
    //    }
    //    catch (err) {
    //        alert(err.Description);
    //    }
    //}  onkeypress = "return OnlyInputLetters(event,this)" 


    function ValInDataLetter(input) {
        var regex = /[^a-zA-Z/ ]/g;
        input.value = input.value.replace(regex, "");
    }
</script>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        <div class="form-group">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Application_Id)
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })

            @*@Html.DropDownListFor(model => model.Status, ViewBag.Active, new { @class = "form-control" })*@
            <div class="col-lg-10">
                @Html.DropDownListFor(model => model.Status,
                      new SelectList(ViewBag.Active, "Value", "Text"),
                       new { @class = "form-control" })
            </div>
            @Html.HiddenFor(model => model.Application_Id, new { htmlAttributes = new { @class = "form-control" } })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Remark, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-lg-10">
                @Html.EditorFor(model => model.Remark, new { htmlAttributes = new { @class = "form-control", @onkeyup = "ValInDataLetter(this)"} })
                @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Update Status" class="btn btn-success btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
